{"version":3,"sources":["reportWebVitals.js","Calculator.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","CreateButton","_this","this","react_default","a","createElement","class","props","number","onClick","onClickHandler","data","React","Component","Calculator","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentOperand","previousOperand","assertThisInitialized","operation","undefined","document","querySelector","innerText","getDisplayNumber","concat","integerDisplay","stringNumber","toString","integerDigits","parseFloat","split","decimalDigits","isNaN","toLocaleString","maximumFractionDigits","slice","computation","prev","curr","compute","includes","theButton","clear","updateDisplay","delete","chooseOperation","appendNumber","_this3","Calculator_IntroText","className","Calculator_Output","map","Calculator_CreateButton","IntroText","href","Output","data-previous-operand","data-current-operand","ReactDOM","createRoot","getElementById","render","StrictMode","src_Calculator"],"mappings":"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","file":"static/js/main.6b375216.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nclass CreateButton extends React.Component {\n  render(){\n  return <button class={this.props.number[0]} onClick={() => this.props.onClickHandler(this.props.number[2])} data={this.props.number[1]}>{this.props.number[2]}</button>;\n  }\n  }\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.currentOperand = '';\n    this.previousOperand = '';\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n\n  clear() {\n    this.currentOperand = '';\n    this.previousOperand = '';\n    this.operation = undefined;\n  }\n\n  updateDisplay() {\n    document.querySelector(\".current-operand\").innerText = \n    this.getDisplayNumber(this.currentOperand);\n    if(this.operation != null){\n        document.querySelector(\".previous-operand\").innerText = \n        `${this.getDisplayNumber(this.previousOperand)} ${this.operation}`;\n    } else {\n      document.querySelector(\".previous-operand\").innerText = ''; \n    }\n  }\n\n  getDisplayNumber(number){\n    const stringNumber = number.toString();\n    const integerDigits = parseFloat(stringNumber.split('.'));\n    const decimalDigits = stringNumber.split('.')[1];\n    let integerDisplay\n    if(isNaN(integerDigits)) {\n        integerDisplay = ''\n    } else {\n        integerDisplay = integerDigits.toLocaleString('en', {\n         maximumFractionDigits: 0   \n        })\n    }\n    if (decimalDigits != null) {\n        return `${integerDisplay}.${decimalDigits}`\n    } else {\n        return integerDisplay;\n    }\n  }\n\n  delete() {\n  this.currentOperand = this.currentOperand.toString().slice(0,-1);\n  }\n  \n  compute() {\n    let computation;\n    const prev = parseFloat(this.previousOperand);\n    // console.log(\"Previous Number is \"+ this.previousOperand);\n    // console.log(\"Current Operand is \"+ this.currentOperand);\n    const curr = parseFloat(this.currentOperand);\n    if(isNaN(prev) || isNaN(curr)) return;\n    switch(this.operation) {\n        case '+':\n            computation = prev + curr;\n            break;\n        case '-':\n            computation = prev - curr;\n            break;\n        case '*':\n            computation = prev * curr;\n            break;\n        case '%':\n            computation = prev / curr;\n            break;\n        default:\n            return;\n    }\n    this.currentOperand = computation;\n    this.operation = undefined;\n    this.previousOperand = '';\n    // console.log(\"The value of computation is \" + computation);\n  }\n\n  chooseOperation(operation) {\n    if (this.currentOperand === '') return;\n    if (this.previousOperand !== '') {\n        this.compute();\n    }\n    this.operation = operation;\n    this.previousOperand = this.currentOperand;\n    this.currentOperand = '';\n  }\n\n  appendNumber(number) {\n    // if(wasEqual === true) {\n    //     this.currentOperand = '';\n    //     wasEqual = false;\n    // }\n    if(number === '.' && this.currentOperand.includes('.')) return;\n    if(isNaN(this.currentOperand)) \n    { \n            this.currentOperand = number.toString();\n    } else this.currentOperand = this.currentOperand.toString() + number.toString();\n    }\n\n  onClickHandler(theButton){\n    // console.log(\"It made it in to onClickHandler.  The parameter value is \",theButton);\n    switch(theButton){\n      case \"AC\":\n          this.clear();\n          this.updateDisplay();\n          break;\n      case \"DEL\":\n          this.delete();\n          this.updateDisplay();\n          break;\n      case \"=\":\n      default:\n          this.compute();\n          this.updateDisplay();\n          // This is a hack I used because the numbers weren't clearing after equals.\n          // wasEqual = true;\n          this.currentOperand = '';\n          this.previousOperand = '';\n          this.operation = undefined;\n          break;\n      case \"%\":\n      case \"*\":\n      case \"+\":\n      case \"-\":\n          this.chooseOperation(theButton);\n          this.updateDisplay();\n          break;\n      case \".\":\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n      case 0:\n          this.appendNumber(theButton);\n          this.updateDisplay();\n          break;\n  }\n  }\n\n\n  render() {\n    const printButtons = \n    [\n        ['span-two','data-all-clear','AC'],\n        [null,'data-delete','DEL'],\n        [null,'data-operation','%'],\n        [null,'data-number',1],\n        [null,'data-number',2], \n        [null,'data-number',3], \n        [null,'data-operation','*'],\n        [null,'data-number',4],\n        [null,'data-number',5], \n        [null,'data-number',6], \n        [null,'data-operation','+'],\n        [null,'data-number',7],\n        [null,'data-number',8], \n        [null,'data-number',9], \n        [null,'data-operation','-'],\n        [null,'data-operation','.'], \n        [null,'data-number',0], \n        ['span-two', 'data-equals', \"=\"],\n    ];\n\n    return(\n    <div>\n    <IntroText />\n    <div className='onecolumnwrapper'>\n      <div className=\"calculator-grid\">\n        <Output />\n        {printButtons.map((number) =>{\n          return (\n            <CreateButton number={number} onClickHandler={this.onClickHandler} />\n          )\n        \n        })}\n      </div>\n    </div>\n    </div>\n    )\n  }\n\n}\n\nclass IntroText extends React.Component{\n\trender(){\n\t\treturn(\n      <div>\n\t\t\t    <h1>Calculator refactored into React</h1>\n          <p>Goal:  Refactor <a href=\"https://kericarpenterprog.github.io/my-app/calculator.html\">my existing javascript calculator </a> into a React app.</p>\n          <h5>I did this in Summer 2022 with Kevin Chan, my tutor's help to improve my React skills.</h5>\n      </div>\n\t\t);\n\t}\n};\n\nclass Output extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className='output'>\n          <div className='previous-operand' data-previous-operand></div>\n          <div className='current-operand' data-current-operand></div>\n      </div>\n\t\t);\n\t}\n};\n\nexport default Calculator;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport Calculator from './Calculator';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}